3. Coding challenge No. 3
coding challenge:

1. write a function that takes two arguments, adds them and checks if the output is bigger than 100;
2. write a function that lists all the numbers from 0 to 100; if the outcome number is even print to the console the number plus  add the line 'it is an even';
if it is odd add the line 'it is odd'

————————————————————————————————————————————————————————————————
4. Coding Challenge No. 4
- Write a function that takes one argument as a string and it checks if this argumement is a Palindrome (kayak);  

function palindrome(x){  
var temp = x.split("")  
var array = [];  
for(i=temp.length-1;i>=0;i--){  
	array.push(temp[i])  
}  var result = array.join('')  
if(result === x){  
	console.log(result + ' is a palindrome')  
}else {  
	console.log(result + ' is not a palindrome')  
}  
}
————————————————————————————————————————————————————————————————
5. Coding challenge No. 5
COding challenge;
write a function that takes an array as an argument and gives you the sum of this array ([1,2,3] -> 6)

var sum;  
for(i=0;i< 1000;i++){  
	if(i% 2 === 0  || i % 4 === 0){  
		sum += i;  
	}   
}console.log(sum)  

////////////////////
var a = [1,2,3,4]  

var sum = a.reduce(function(a, b){  
	return a + b;  
}, 0)  

————————————————————————————————————————————————————————————————
6. Coding challenge No. 6
add the sum: 

var obj = {
	name: 'torture',
	miniObj: {
		name: 'Minitorture',
		array: [{
			numbers: [['a', 'b', 'c'], [1,2,3,4,5,6,7,8,9], 			['fun']]
		}]
	}

}

var sum = 0;
for(var i =0; i<obj.miniObj.array[0].numbers[1].length;i++){
sum += obj.miniObj.array[0].numbers[1][i]
}
console.log(sum)
————————————————————————————————————————————————————————————————
7. Coding challenge No. 7

// write a function that takes an array as an argument and 
// returns the highest number of this array
————————————————————————————————————————————————————————————————
8. Coding challenge No. 8

1.  Write a function that takes an array of numbers and creates a new array with 
// only the even numbers from the first array. For instance, 
// if you pass your function an array of [1, 3, 4, 6, 9], your function should return [4, 6].


2.  Write a program that prints the numbers from 1 to 100. For multiples of three print “Rick” instead of the number and for the multiples of five print “Roll”. For numbers which are multiples of both three and five print "RickRoll".
————————————————————————————————————————————————————————————————
9. Coding Challenge No. 9

coding challenge:

1. write a function that takes an array of names and returns a whole string of these names with comma and the word 'and' before the last name;
["John", "George", "James", "Anna"] ---> "John, George, James, and Anna";

var names = ["Chris", "Oggi", "Emily"]; 

function concatArray(namesArray) {
	var returningString = "";

	for (var i = 0; i < namesArray.length; i++) {
		returningString += namesArray[i];
		if (i < namesArray.length - 2) {
			returningString += ", ";
		} else if (i === namesArray.length - 2) {
			returningString += ", and ";
		}
	}

	return returningString; 

2.      // Write a function that takes an array of arrays as an argument and returns an object literal. Instead of using the classic 'for' loop, use a 'forEach' loop.

     // For example:

     //  [["Dostoyevski", "Idiot"], ["Twain", "The price and the pauper"], ["Poe", "The raven"], ["Remark", "All quiet on the western front"], ["Kafka", "The trial"]];

     //  Would become: 


     // {Dostoyevski: "Idiot", "Twain": "The prince and the pauper", "Poe": "The raven", "Remark": "All quiet on the western front", Kafka: "The trial" }
     
     var houseWords = [["Tully", "Family, Duty, Honor"], ["Stark", "Winter is Coming"], ["Lannister", "Hear me Roar!"], ["Martell", "Unbowed, Unbent, Unbroken"]];
​
function arrayToObj(arrayOfArrays) {   
    var returningObj = {};
​
    arrayOfArrays.forEach(function(innerArray) {
        var key = innerArray[0];
        var value = innerArray[1];

        returningObj[key] = value;

    });
​
    return returningObj;
}
​
var houseWordsObj = arrayToObj(houseWords);
————————————————————————————————————————————————————————————————  
Coding challenge No. 10

// write a function named stringy that takes a size and returns a string of alternating '1s' and '0s'. the string should start with a 1. a string with size 6 should return :'101010'. with size 4 should return : '1010'. with size 12 should return : '101010101010'. The size will always be positive and will only use whole numbers.

function stringy(size) {
	var output = ""
	for (i =0; i < size; i++) {
		if(i%2 == 0) {
			output += 1
		} else {
			output += 0
		};
	};
	return output;
};

// Given a non-negative integer, return an array containing a list of independent digits in reverse order. Example: 348597 => [7,9,5,8,4,3]

function numToArray(int) {
  var str = int.toString();
  var rev = str.split("").reverse();
  var fin = rev.join("");
  return fin
}

// Fibonacci number is the sum of the previous two sequence numbers. Below is an example of the sequence 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, … Notice the sequence pattern is the sum of the previous two numbers?

function fibonacci(n) {
   if (n < 2){
     return 1;
   }else{
     return fibonacci(n-2) + fibonacci(n-1);
   }
};

// Your online store likes to give out coupons for special occasions. Some customers try to cheat the system by entering invalid codes or using expired coupons. Write a function called checkCoupon to verify that a coupon is valid and not expired. If the coupon is good, return true. Otherwise, return false. A coupon expires at the END of the expiration date. All dates will be passed in as strings in this format: "June 15, 2014.
// to check the coupon, call out the function and put the date as a argument checkCoupon(year, month , date)
function checkCoupon(date) {
	
	var expiration = new Date("June 15, 2014");

	if (new Date(date) < expiration){
		return true
	}else {
		return false;
	}
};


// "Write a function to test whether a given input is a valid email address. For the purposes of this assessment, here is what makes a valid email: At least one letter character at the beginning All characters between the first character and the @ (if any) must be letters, numbers, or underscores There must be an @ character (after the points listed just now) After the @ character, there must be at least one word character (letter, number, or underscore) or hyphen The email must end with at least one set of a dot followed by one or more word characters. The input must NOT be case-sensitive The function should return true or false.


function emailcheck(email) {
	// check if there is a @ character in the email 
	if (email.indexOf('@') > -1)
	{
		console.log("@ found inside your_string");
		// test if the first part of email have either a non-number or number characters
		if (email.split("@")[0].match(/\D/g) != null)
		{
			console.log("your first part of email have either a non-number or number, ITS GOOD")
		}
		else 
		{
			console.log("your first part of email is NOT GOOD")
		}
		if (email.split("@")[1].indexOf('.') > -1) // check if there is a '.' in the second part
		{
			console.log("you have a . in your second part")
			if (email.split("@")[1].match(/\D/g) != null ) 
			{
				console.log("your second part of email have either a non-number or number, ITS GOOD")
			}
			else 
			{
				console.log("your second part of email is NOT GOOD")
			}
			
		}
		else
		{
			console.log("your second part of email doesnt have a dot")
		}
	}

	else
	{
		console.log("IT IS NOT EVEN AN EMAIL ")
	}


	
}


setTimeout(function () {
    $('.box').addClass('fadeIn')}, 4000
);

———————————————————————————————————————————————————————————————— 
Coding challenge N0. 12

# Write a function (try to use filter function in JS) that fiters only the positive odd numbers from an array. For example,

# array = [1,2,3,-5,-6,-7,4] -> [1,3]

 array = [1,2,3,-5,-6,-7,4]

def odds(number)
	empty = []
	number.each do |ar|
		if ar > 0 && ar % 2 != 0
			empty.push(ar)
		end	
	end
	p empty
end

odds(array)
———————————————————————————————————————————————————————————————— 
Coding challenge N0. 13
// 1. given a string, create a function that returns the last character in that string.
// examples:
// "morning" --> g

// "winter" --> r

// result = ''
// function stringy(x){
//   result = x.split("")
//   return result[result.length-1]
// }

// stringy('whatever')


// def stringy(x)
//   result = x.split("")
//    result[-1]
// end

// stringy('something')

// 2. given two arrays that contain integers with no duplicates, create a function that determines
// whether they contain the exact same elements.
// examples:
 // [1, 2, 3], [3, 2, 1] --> true
 // [1, 2, 3], [2, 3, 4] --> false


 // function compare(a,b){
 // 	var t = a.sort()
 // 	var u = b.sort()
 // if(t.join('') === u.join('')){
 //   return true
 // }else {
 //   return false
 // }
 // }
 // compare([2,3,1], [3,2,1])

 // 3. write a function that takes in a math operator as a string followed by two parameters, x and y, then
 // return the result of that math operation applied to the two parameters.
 // examples:
 // math("*", 2, 3) ---> 6
 // math("+", 4, 5) ---> 9

 // math("/", 5, 5) ---> 1

 // math("*", 4, 5) ---> 20

———————————————————————————————————————————————————————————————— 
Coding challenge No. 14
Write a code for a chessboard:

function c(){
 var r = "";
 for(var i = 0; i < 8; i++){
   for(var j = 0; j < 8; j++){
     r+=(i%2 === 0 ? j%2 !== 0 : j%2 === 0)?"#":".";
   }
   r+="\n";
 }
 return r;
}console.log(c());
———————————————————————————————————————————————————————————————— 
Coding challenge No. 15

Create a FizzBuzz recursively

function fizzBuzz(n) {
  if (n === 100) {
    return 100
  } else {
    if (n % 3 === 0 && n % 5 === 0) {
      console.log('FizzBuzz');
    } else if (n % 5 === 0) {
      console.log('Buzz');
    } else if (n % 3 === 0) {
      console.log('Fizz');
    } else {
      console.log(''+ n);
    }
    return fizzBuzz(n + 1)
  }
};
———————————————————————————————————————————————————————————————— 
Week 2 coding challenges in Canvas:

1. Write a function that takes two arguments and returns the sum of the two arguments divided by two.

2. Write a function that prints all the numbers from 1 to 100; if a number is divisible by 7 add the line 'this is divisible by 7'.

3. Create an HTML page with two divs in different colors and one button; When you press the button change the width and the hight of the first div and the color and the shape of the second div.

———————————————————————————————————————————————————————————————— 
Week 3 coding challenges in Canvas:

1. Write a function that takes an array as an argument and returns the array in reverse order e.g.
[2,3,4,5,6,7]  ----> [7, 6, 5, 4, 3, 2]

2. Write a function that takes an argument as a string and alerts its content in 3 seconds

3. Write a method that takes the first array from the object and combines it into a string with the second array in the object. e.g. ---> 'abracadabra'

var obj = [
['a', 'b', 'r', 'a'],
{array: [ 'c', 'a', 'd', 'a', 'b', 'r', 'a']}

]

4. Write a function that takes a string as an argument and inserts each letter as a 
 separate item in an array. The new array should contain ONLY the consonants (not the vowels)

———————————————————————————————————————————————————————————————— 
Week 4 coding challenges in Canvas:

a) Write a method that gives you the sum of all numbers that are mulitpliers of 3 and 4 under 1000

b) Write a function that takes in one parameter "length" and prints out that many stars - example:
 3 --> ***
 5 --> *****

c) Write a function that takes in one parameter "length" prints out a square of that length. Hint: you can user the previous function for this one.
example:        
 3 -->  ***
           ***
           ***
 5 --> *****
         *****
         *****
         *****
         *****

d) Write a function that takes a number and gives the factorial of this number. Example:
5 -> 120

6 - 720

———————————————————————————————————————————————————————————————— 
Week 6 coding challenges in Canvas:
1. given a string, create a function that returns the last character in that string. In JS
examples:
"morning" --> g

"winter" --> r

1.1/2 Write the same function in Ruby

2. given two arrays that contain integers with no duplicates, create a function that determines
whether they contain the exact same elements.
examples:
 [1, 2, 3], [3, 2, 1] --> true
 [1, 2, 3], [2, 3, 4] --> false

 

3. write a function that takes in a math operator as a string followed by two parameters, x and y, then
 return the result of that math operation applied to the two parameters.
 examples:
 math("*", 2, 3) ---> 6
 math("+", 4, 5) ---> 9

 math("/", 5, 5) ---> 1

 math("*", 4, 5) ---> 20
———————————————————————————————————————————————————————————————— 
Week 7 coding challenges in Canvas:

1. Write a function that lists only the odd numbers numbers from 0 to 100;

2.  Write a function that takes in an array of strings and returns all of them
concatenated together. You may not use any String functions.
example:
["abra", "cadabra"] returns "abracadabra"
["a", "b", "c"] returns "abc"

 

3. Create a function that takes in two strings and prints out the first letter in each of them.

4. Write a function that takes in two integers and returns the one which is
// closest to 0. If they are the same distance from 0, return either of them.
 example:
 2, 3 returns 2

-5, 6 returns -5
-1, -1 returns -1

////////

Object iteration:

var obj = {
 first: "John",
 last: "Doe"
};

//
//    Visit non-inherited enumerable keys
//
Object.keys(obj).forEach(function(key) {

 console.log(key, obj[key]);

});

















